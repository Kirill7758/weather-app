{"version":3,"sources":["assets/img/svg/icons8-react.svg","assets/img/svg/002-sun.svg","assets/img/jpg/IMG_0785.jpeg","assets/img/svg/back-white.svg","assets/img/svg/back.svg","assets/img/svg/001-sky.svg","assets/img/svg/003-snow.svg","assets/img/svg/004-water.svg","assets/img/svg/005-rain.svg","assets/img/svg/001-sky-night.svg","assets/img/svg/003-rain-night.svg","assets/img/svg/004-rain-clouds-night.svg","assets/img/svg/002-moon.svg","assets/img/svg/001-empire-state-building.svg","client/Header/components/HeaderStart/HeaderStart.jsx","client/Header/components/Switcher/Switcher.jsx","client/Header/components/Header/Header.jsx","shared/hooks/useClass/useClass.jsx","client/SideBar/components/SideBar/SideBar.jsx","shared/config/config.js","shared/CardInfo/components/WeatherDay/WeatherDay.jsx","shared/CardInfo/components/WeatherInfo/WeatherInfo.jsx","shared/CardInfo/components/CardItem/CardItem.jsx","shared/CardInfo/components/CardInfo/CardInfo.jsx","shared/MainCard/MainCard.jsx","client/Main/pages/MainPage/AddCard/AddCard.jsx","shared/functions/slide/slide.js","shared/functions/changeActiveBtn/changeActiveBtn.js","shared/Slider/components/Slider/Slider.jsx","client/Main/pages/MainPage/Main/Main.jsx","client/Main/pages/AddCityPage/Search/Search.jsx","shared/functions/onFilterCity/onFilterCity.js","client/Main/pages/AddCityPage/AddCity/AddCity.jsx","shared/hooks/useAPIWeather/useAPI.jsx","client/Client/Client.jsx","shared/functions/addCard/addCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderStart","setBurger","visible","theme","className","style","display","alignItems","onClick","to","src","logo","alt","Switcher","switcher","setSwitcher","Header","setToday","Date","split","dayWeek","month","day","year","useEffect","useClass","state","firstClass","secondClass","useState","stateElement","setStateElement","changeClass","onToggle","arg","Sidebar","burger","hide","imgUser","config","imgArr","dec","img","sky","sun","snow","rain","storm","stormNight","at","rainNight","from","skyNight","night","API_KEY","week","PREV","NEXT","interval","WeatherDay","coord","today","lat","lon","days","setDays","fetch","then","response","json","data","objDays","daily","map","idx","temp","weather","filter","item","arr","length","catch","err","console","log","listDays","main","find","active","key","Math","floor","WeatherInfo","info","name","Temperature","description","speed","humidity","capital","CardItem","props","CardInfo","useLocation","backBlack","back","MainCard","btn","obj","animate","TemperatureMin","TemperatureMax","checkNight","getHours","AddCard","setShow","setObjCard","cityImg","changeActiveBtn","condition","handler","Slider","children","hiddenElements","addElement","translateX","setTranslateX","setDisableNext","disableNextClass","setDisablePrev","disablePrevClass","setClick","click","styleTranslate","transform","transition","width","styleHide","count","window","innerWidth","getArrows","disable","childLength","position","setPosition","slide","Main","arrCards","cardList","setCardList","newArr","index","pathname","Search","value","result","listCountryShow","setValue","setListCountryShow","setCard","setShowCard","setAnimate","countryName","setCountryName","showList","setShowList","city","res","toUpperCase","onChangeInput","minWidth","onSubmit","e","preventDefault","type","placeholder","onChange","target","newListCountry","includes","onFilterCity","search","AddCity","objCard","addCard","resultShow","card","animateResult","cod","wind","temp_min","temp_max","pressure","message","useAPI","Client","show","setArrCards","hashComponentCardInfo","useMemo","path","JSON","parse","localStorage","getItem","exact","removeItem","setItem","stringify","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.369efbb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons8-react.9e3a25e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/002-sun.2110aa2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0785.3a7139fb.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/back-white.aeebca5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.265e3007.svg\";","module.exports = __webpack_public_path__ + \"static/media/001-sky.acd8aae3.svg\";","module.exports = __webpack_public_path__ + \"static/media/003-snow.0f0243b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/004-water.77078e60.svg\";","module.exports = __webpack_public_path__ + \"static/media/005-rain.1493d0b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/001-sky-night.89ef778b.svg\";","module.exports = __webpack_public_path__ + \"static/media/003-rain-night.869b50be.svg\";","module.exports = __webpack_public_path__ + \"static/media/004-rain-clouds-night.7d2f80e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/002-moon.ba638086.svg\";","module.exports = __webpack_public_path__ + \"static/media/001-empire-state-building.2f413c59.svg\";","import React from \"react\";\nimport logo from \"../../../../assets/img/svg/icons8-react.svg\";\nimport {NavLink} from \"react-router-dom\";\n\nconst HeaderStart = ({setBurger, visible, theme}) => {\n    return(\n        <div className={\"header-start\"}>\n            <div className=\"header-block\">\n                <div className=\"burger\" style={{display: \"flex\", alignItems: \"center\"}}>\n                    <div\n                        className={\"burger-block \" + visible}\n                        onClick={() => setBurger()}\n                    >\n                        <span className={\"burger-part \" + theme} />\n                        <span className={\"burger-part \" + theme} />\n                        <span className={\"burger-part \" + theme} />\n                    </div>\n                </div>\n            </div>\n            <NavLink to='./' className={'link logo-block'}>\n                <img src={logo} className={\"logo\"} alt=\"#\" />\n                <h1 className=\"logo-title\">Weather App</h1>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default HeaderStart\n","import React from \"react\";\n\nconst Switcher = ({theme, switcher, setSwitcher}) => {\n\n    return(\n        <div className=\"switcher-block\">\n            <span className=\"switcher-light\">Light</span>\n            <div\n                className={\"switcher \" + theme}\n                onClick={() => setSwitcher(!switcher)}\n            >\n                <div className=\"switcher-circle\">\n                </div>\n            </div>\n            <span className=\"switcher-dark\">Dark</span>\n        </div>\n    )\n}\n\nexport default Switcher\n","import React, {useEffect} from \"react\";\nimport HeaderStart from \"../HeaderStart\";\nimport Switcher from \"../Switcher\";\nimport './css/Header.css';\nimport './css/HeaderLight.css';\nimport './css/HeaderDark.css';\n\n\nconst Header = ({theme, switcher, setSwitcher, setBurger, visible, setToday}) => {\n    const date = new Date() + ''\n    const [dayWeek, month, day, year] = date.split(' ')\n    useEffect(() => {\n        setToday(dayWeek)\n    }, [dayWeek, setToday])\n    return(\n        <header className={\"header \" + theme}>\n            <HeaderStart\n                setBurger={setBurger}\n                visible={visible}\n                theme={theme}\n            />\n            <div className=\"date-block\">\n                <h1 className=\"date-title\">{day} {month} {year}</h1>\n            </div>\n            <Switcher\n                switcher={switcher}\n                setSwitcher={setSwitcher}\n                theme={theme}\n            />\n        </header>\n    )\n}\n\nexport default Header\n","import {useState} from 'react'\n\nexport const useClass = (state, firstClass, secondClass = '', deps = []) => {\n    const [stateElement, setStateElement] = useState(state)\n    const changeClass = stateElement ? firstClass : secondClass\n\n    const onToggle = (arg) => {\n        typeof arg === 'boolean' ? setStateElement(arg) : setStateElement(!stateElement)\n    }\n\n\n    return [stateElement, onToggle, changeClass]\n}\n\n","import React from \"react\";\nimport imgUser from \"../../../../assets/img/jpg/IMG_0785.jpeg\";\nimport \"./css/Sidebar.css\";\nimport \"./css/SidebarDark.css\";\n\nconst Sidebar = ({burger, theme}) => {\n    const hide = !burger ? 'hide ' : ''\n    return(\n        <div className={\"side-bar \" + hide}>\n            <div className={\"side-col \" + theme}>\n                <div className=\"info\">\n                    <h3 className=\"info-title\">Welcome Back</h3>\n                    <div className=\"info-user\">\n                        <div className=\"info-img-block\">\n                            <img className={\"info-img\"} src={imgUser} alt=\"#\"/>\n                        </div>\n                        <div className=\"info-user-contact\">\n                            <h3 className=\"info-user-name\">Gerasimenko Kirill</h3>\n                            <span className=\"info-user-email\">kirillg7758@gmail.com</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import sky from \"../../assets/img/svg/001-sky.svg\";\nimport sun from \"../../assets/img/svg/002-sun.svg\";\nimport snow from \"../../assets/img/svg/003-snow.svg\";\nimport rain from \"../../assets/img/svg/004-water.svg\";\nimport storm from \"../../assets/img/svg/005-rain.svg\";\nimport skyNight from \"../../assets/img/svg/001-sky-night.svg\";\nimport rainNight from \"../../assets/img/svg/003-rain-night.svg\";\nimport stormNight from \"../../assets/img/svg/004-rain-clouds-night.svg\";\nimport night from \"../../assets/img/svg/002-moon.svg\";\n\nexport const config = {\n    imgArr: [\n        {\n            dec: \"Clouds\",\n            img: sky\n        },\n        {\n            dec: \"Clear\",\n            img: sun\n        },\n        {\n            dec: \"Snow\",\n            img: snow\n        },\n        {\n            dec: \"Rain\",\n            img: rain\n        },\n        {\n            dec: \"Thunderstorm\",\n            img: storm\n        },\n        {\n            dec: \"Thunderstorm\",\n            img: stormNight,\n            at: 22\n        },\n        {\n            dec: \"Rain\",\n            img: rainNight,\n            at: 22,\n            from: 5\n        },\n        {\n            dec: \"Clouds\",\n            img: skyNight,\n            at: 22,\n            from: 5\n        },\n        {\n            dec: \"Clear\",\n            img: night,\n            at: 22,\n            from: 5\n        }\n    ],\n    API_KEY: 'a5453c530d029c9500231fc1a65b49df',\n    week: ['Sun', 'Mon', 'Tues', 'Wed', 'Thu', 'Fri', 'Sat'],\n    PREV: 'prev',\n    NEXT :'next',\n    interval: 332,\n}\n\n","import React, {useEffect, useState} from \"react\";\nimport {config} from \"../../../config/config\";\n\nconst WeatherDay = ({coord, today}) => {\n    const {lat, lon} = coord\n    const {API_KEY, week, imgArr} = config\n\n    const [days, setDays] = useState([])\n\n    useEffect(() => {\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=Tus&appid=${API_KEY}`)\n            .then(response => response.json())\n            .then((data) => {\n                const {daily} = data;\n                const objDays = daily.map(({temp, weather}, idx) => {\n                        return { temp, weather, day: week[idx] }\n                }).filter((item, idx, arr) => idx !== arr.length - 1)\n                setDays(objDays)\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }, [lat, lon, API_KEY, week])\n\n    const listDays = days.map(({temp, weather, day: dayWeek}, idx) => {\n        const {day} = temp\n        const [{main}] = weather\n        const {img} = imgArr.find(({dec}) => dec === main) || {img: ''}\n        const active = today === dayWeek ? 'active' : ''\n        console.log(today, dayWeek)\n        return(\n            <div className={\"weather-day \" + active} key={'weather-day-' + idx}>\n                <h3 className=\"day-title\">{dayWeek}</h3>\n                <img src={img} alt=\"\" className=\"day-img\"/>\n                <span className=\"day-temperature card-temperature\">{Math.floor(day - 273.15)}</span>\n                <span className=\"day-weather\">{main}</span>\n            </div>\n        )\n    })\n    console.log(listDays)\n    return(\n        <>\n            {listDays}\n        </>\n    )\n}\n\nexport default WeatherDay\n","import React from \"react\";\n\nconst WeatherInfo = ({info}) => {\n    const {\n        name,\n        Temperature,\n        description,\n        speed,\n        humidity,\n        capital\n    } = info\n    return(\n        <div className=\"weather-info\">\n            <div className=\"weather-block\">\n                <h3 className=\"weather-temperature card-temperature\">{Temperature}</h3>\n                <span className=\"weather card-weather-title\">{description}</span>\n                <div className=\"weather-character\">\n                    <div className=\"weather-humidity\">\n                        <span className=\"humidity\">Humidity</span>\n                        <span className=\"humidity-number\">{humidity} %</span>\n                    </div>\n                    <div className=\"weather-wind\">\n                        <span className=\"wind\">Wind</span>\n                        <span className=\"wind-number\">{speed} k/m</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"city-block\">\n                <h3 className=\"weather-city-title\">{name}, {capital}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default WeatherInfo\n","import React from \"react\";\nimport WeatherDay from \"../WeatherDay\";\nimport WeatherInfo from \"../WeatherInfo\";\n\nconst CardItem = (props) => {\n    const {coord, today} = props\n    return(\n        <div className=\"card\">\n            <WeatherInfo info={props}/>\n            <div className=\"weather-days\">\n                <WeatherDay coord={coord} today={today}/>\n            </div>\n        </div>\n    )\n}\n\nexport default CardItem\n","import React from \"react\"\nimport './css/CardInfo.css'\nimport './css/CardInfoLight.css'\nimport './css/CardInfoDark.css'\n\nimport back from '../../../../assets/img/svg/back-white.svg'\nimport backBlack from '../../../../assets/img/svg/back.svg'\n\nimport {NavLink, useLocation} from \"react-router-dom\"\nimport CardItem from \"../CardItem\"\n\nconst CardInfo = ({theme, today}) => {\n    const {state} = useLocation()\n    const arr = theme === 'light' ? backBlack : back\n    return(\n        <main className={\"main-card \" + theme}>\n            <div className=\"card-info-block\">\n                <NavLink to=\"/\">\n                    <div className=\"comeback-block\">\n                        <div className=\"comeback-arrow\">\n                            <img className=\"comeback-img\" src={arr} alt=\"#\"/>\n                        </div>\n                        <span className=\"comeback-title\">Back</span>\n                    </div>\n                </NavLink>\n                <div className=\"decor\">\n                </div>\n                <CardItem {...state} today={today}/>\n            </div>\n        </main>\n    )\n}\n\nexport default CardInfo\n","import React from 'react'\nimport './MainCard.css'\nimport {config} from \"../config/config\"\n\nconst MainCard = ({switcher, btn, obj = {}, animate}) => {\n    const {\n        name,\n        Temperature,\n        TemperatureMin,\n        TemperatureMax,\n        description,\n        capital\n    } = obj;\n    const {imgArr} = config\n    const checkNight = new Date().getHours()\n    // console.log(checkNight)\n    const {img} = imgArr.find(({dec, at, from}) =>\n        ((checkNight >= at || checkNight <= from) && dec === description) || dec === description) || {img: ''}\n\n    return(\n            <div className={\"slider-card \" + switcher + \" \" + animate}>\n                <h3 className=\"card-city\">{name}, {capital}</h3>\n                <img className=\"card-icon\" src={img} alt=\"#\"/>\n                <div className=\"card-weather\">\n                    <h2 className='card-temperature'>{Temperature}</h2>\n                    <span className={\"card-weather-title\"}>{description}</span>\n                </div>\n                <div className=\"card-minmax\">\n                    <span className='card-min'>{TemperatureMin}</span>\n                    <span className='card-max'>{TemperatureMax}</span>\n                </div>\n                {btn}\n            </div>\n    )\n}\n\nexport default MainCard\n","import React from \"react\";\nimport img from \"../../../../../assets/img/svg/002-sun.svg\";\nimport cityImg from \"../../../../../assets/img/svg/001-empire-state-building.svg\";\nimport \"./css/AddCard.css\";\nimport \"./css/AddCardDark.css\";\nimport \"./css/AddCardLight.css\";\n\nconst AddCard = ({switcher, setShow, setObjCard}) => {\n\n    return(\n        <div className={\"slider-card \" + switcher} onClick={() => {\n            setShow(false)\n            setObjCard({})\n        }}>\n            <h3 className=\"card-city\">Add Country</h3>\n            <div className={\"card-add \" + switcher}>\n                <span className={\"card-plus \" + switcher}></span>\n                <span className={\"card-plus \" + switcher}></span>\n            </div>\n            <img className=\"card-city-img\" src={cityImg} alt=\"#\"/>\n        </div>\n    )\n}\n\nexport default AddCard\n","import {config} from \"../../config/config\";\nconst {PREV, NEXT, interval} = config;\n\nexport const slide = (className, childLength, position, setPosition, count = 2) => {\n    if (childLength >= 3) {\n        switch (className) {\n            case PREV:\n                if (position !== 0) {\n                    setPosition(position + interval)\n                }\n                break;\n            case NEXT:\n                if (position !== (childLength - count) * -interval) {\n                    setPosition(position - interval)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\n","export const changeActiveBtn = (condition, handler) => {\n    if (condition) {\n        handler(true)\n    } else {\n        handler(false)\n    }\n}\n","import React, {useEffect, useState} from \"react\";\nimport {useClass} from \"../../../hooks/useClass\";\nimport './css/Slider.css';\nimport './css/SliderLight.css';\nimport './css/SliderDark.css';\n\nimport {config} from '../../../config/config'\nimport {slide, changeActiveBtn} from '../../../functions'\n\nconst Slider = ({children}) => {\n    const [hiddenElements, addElement] = children\n    const {interval, PREV, NEXT} = config\n\n    const [translateX, setTranslateX] = useState(0)\n    // eslint-disable-next-line no-unused-vars\n    const [disableNext, setDisableNext, disableNextClass] = useClass(false, 'disable')\n    // eslint-disable-next-line no-unused-vars\n    const [disablePrev, setDisablePrev, disablePrevClass] = useClass(false, 'disable')\n    const [, setClick, click] = useClass(false, 'click')\n\n    const styleTranslate = {\n        transform: `translateX(${translateX}px)`,\n        transition: '1.5s',\n        width: hiddenElements.length > 2 ? 'auto' : '100%'\n    }\n    const styleHide = {display: 'none'}\n    let count = 2;\n    const width = window.innerWidth;\n    // eslint-disable-next-line default-case\n    switch (width) {\n        case 1440:\n            count = 2\n            break;\n        case 1024:\n            count = 1\n            break;\n        case 768:\n            count = 0\n            break;\n        case 425:\n            count = 0\n            break;\n    }\n    useEffect(() => {\n        changeActiveBtn((translateX === (hiddenElements.length-count) * -interval) || hiddenElements.length === 0, setDisableNext)\n        changeActiveBtn(translateX === 0, setDisablePrev)\n    }, [translateX, hiddenElements, count, interval, setDisableNext, setDisablePrev])\n\n    const arrows = [\n        {\n        className: PREV,\n        disable: disablePrevClass,\n        },\n        {\n            className: NEXT,\n            disable: disableNextClass,\n        },\n    ]\n\n    const getArrows = arrows.map(({className, disable}, idx) => {\n        return(\n            <span className={className + \" \" + disable}\n                  key={'arrow-' + idx}\n                  style={hiddenElements.length < 3 ? styleHide : {display: ''}}\n                  onClick={() => {\n                      setClick()\n                      slide(className, hiddenElements.length, translateX, setTranslateX, count)\n                  }}\n            />\n        )\n    })\n\n    return(\n        <div className=\"slider-block\">\n            <div className=\"slider slider-md\">\n                <div className={\"slider-visible \" + click}>\n                    <div className={\"slider-row\"} style={styleTranslate}>\n                        {addElement}\n                        {hiddenElements}\n                    </div>\n                </div>\n            </div>\n            {getArrows}\n        </div>\n    )\n}\n\nexport default Slider\n","import React, {useEffect, useState} from \"react\";\nimport MainCard from \"../../../../../shared/MainCard\";\nimport AddCard from \"../AddCard\";\nimport Slider from \"../../../../../shared/Slider/components/Slider\";\nimport {NavLink} from \"react-router-dom\";\nimport \"./css/Main.css\";\nimport \"./css/MainLight.css\";\nimport \"./css/MainDark.css\";\n\nconst Main = ({switcher, arrCards, setShow, setObjCard}) => {\n\n    const [cardList, setCardList] = useState([])\n\n    const theme = switcher ? 'dark' : 'light'\n    useEffect(() => {\n        if (arrCards) {\n            const newArr = arrCards.map((item, index) => {\n\n                return(\n                    <NavLink className=\"link\" to={{pathname: '/card', state: item}} key={\"NavLinkCard-\" + index}>\n                        <MainCard switcher={theme} obj={item} key={\"MainCard-\" + index}/>\n                    </NavLink>\n                )\n            })\n            setCardList(newArr)\n        }\n    }, [theme, arrCards])\n\n    return(\n        <main className={\"main \" + theme}>\n            <Slider>\n                {cardList}\n                <NavLink className=\"link\" to='/add-city'>\n                    <AddCard\n                        switcher={theme}\n                        setShow={setShow}\n                        setObjCard={setObjCard}\n                    />\n                </NavLink>\n            </Slider>\n        </main>\n    )\n}\n\nexport default Main\n","import React, {useEffect, useState} from 'react'\nimport search from \"../../../../../assets/img/svg/icons8-react.svg\"\nimport \"./css/Search.css\"\nimport \"./css/SearchDark.css\"\nimport \"./css/SearchLight.css\"\nimport {onFilterCity} from \"../../../../../shared/functions\";\n\nconst Search = (props) => {\n    const {\n        value,\n        result,\n        listCountryShow,\n        setValue,\n        setListCountryShow,\n        setCard,\n        setShowCard,\n        setAnimate\n    } = props\n    const [countryName, setCountryName] = useState([])\n    const [showList, setShowList] = useState([])\n\n    useEffect(() => {\n        fetch('https://restcountries.eu/rest/v2/all')\n            .then((city) => city.json())\n            .then((res) => {\n                const newArr = res.map(({name, capital}) => `${name.toUpperCase()}, ${capital.toUpperCase()}`)\n                setCountryName(newArr)\n            })\n        setListCountryShow(false)\n    }, [setListCountryShow])\n\n    const onChangeInput = (item) => {\n        setValue(item)\n        setListCountryShow(false)\n        setCard(item)\n        setShowCard(true)\n        setAnimate()\n    }\n\n    return(\n        <div className=\"search-block\">\n            <form className={{minWidth: '100%'}} onSubmit={(e) => {\n                e.preventDefault()\n                setCard(value)\n                setShowCard(true)\n            }}>\n            <label className=\"search\">\n                <input\n                    value={value}\n                    type=\"text\"\n                    placeholder=\"Input Country\"\n                    className=\"search-input\"\n                    onChange={({target}) => {\n                        setValue(target.value.toUpperCase())\n                        onFilterCity(countryName, value, onChangeInput, listCountryShow, setListCountryShow, setShowList)\n                    }}\n                />\n                <img\n                    src={search}\n                    className=\"search-btn\"\n                    alt=\"#\"\n                    onClick={() => {\n                        setAnimate()\n                        setCard(value)\n                        setShowCard(true)\n                    }}\n                />\n            </label>\n            <ul className={\"search-list \" + result}>\n                {showList}\n            </ul>\n            </form>\n        </div>\n    )\n}\n\nexport default Search\n","import React from \"react\";\n\nexport const onFilterCity = (\n    countryName,\n    value,\n    onChangeInput,\n    listCountryShow,\n    setListCountryShow,\n    setShowList\n) => {\n    const newList = countryName.filter((item) => item.includes(value))\n    const newListCountry = newList.map((item, idx) =>\n        <li\n            onClick={() => onChangeInput(item)}\n            className={\"search-city\"}\n            key={'city-' + idx}\n        >{item}</li>);\n    (value === '' || listCountryShow.length) ? setListCountryShow(false) : setListCountryShow(true)\n    setShowList(newListCountry)\n}\n","import React, {useState} from \"react\";\nimport MainCard from \"../../../../../shared/MainCard\";\nimport './AddCity.css'\nimport {useClass} from \"../../../../../shared/hooks/useClass\";\nimport {NavLink} from \"react-router-dom\";\nimport Search from \"../Search\";\nimport {useAPI} from \"../../../../../shared/hooks/useAPIWeather\";\n\nconst AddCity = ({switcher, objCard, setObjCard, addCard, setShow, resultShow}) => {\n    const [value, setValue] = useState('')\n    const [card, setCard] = useState('')\n    const [listCountryShow, setListCountryShow, result] = useClass(true, '', 'hide')\n    const [ , setAnimate, animateResult] = useClass(false, 'add-card')\n\n    useAPI(card, setObjCard)\n\n    const btn =\n        <NavLink to='/' className='link-btn'><\n            button className=\"btn\" onClick={addCard}>Add Country +</button>\n        </NavLink>;\n\n    return(\n        <div className={\"search-page \" + switcher}>\n            <h3 className=\"search-title\">Search Country</h3>\n            <Search\n                value={value}\n                result={result}\n                listCountryShow={listCountryShow}\n                setValue={setValue}\n                setListCountryShow={setListCountryShow}\n                setCard={setCard}\n                setShowCard={setShow}\n                setAnimate={setAnimate}\n            />\n            <div className=\"loader\">\n                <span className=\"loader-pipe\" />\n                <span className=\"loader-pipe\" />\n                <span className=\"loader-pipe\" />\n            </div>\n            <div className={\"hidden-block \" + resultShow}>\n                <MainCard switcher={switcher} btn={btn} obj={objCard} animate={animateResult}/>\n            </div>\n            <div className=\"search-decor\" />\n            <div className=\"search-decor-right\" />\n        </div>\n    )\n}\n\nexport default AddCity\n","import {useEffect} from 'react'\n\nexport const useAPI = (card, setObjCard) => {\n    const API_KEY = 'a5453c530d029c9500231fc1a65b49df';\n    useEffect(() => {\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${card}&appid=${API_KEY}`)\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.cod <= 200) {\n                    const {main, name, weather, wind, coord} = res\n                    const {temp, temp_min, temp_max, pressure, humidity} = main;\n                    const {speed} = wind\n                    const [objWeather] = weather\n                    const {main: description} = objWeather\n                    const Temperature = Math.floor(temp - 273.15)\n                    const TemperatureMin = Math.floor(temp_min - 273.15)\n                    const TemperatureMax = Math.floor(temp_max - 273.15)\n                    setObjCard({\n                        name,\n                        Temperature,\n                        TemperatureMin,\n                        TemperatureMax,\n                        description,\n                        speed,\n                        pressure,\n                        humidity,\n                        coord,\n                        capital: card.split(', ')[1]\n                    })\n                }\n            })\n            .catch((e) => console.log(e.message))\n    }, [card, setObjCard])\n}\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport Header from \"../Header/components/Header\";\nimport {useClass} from \"../../shared/hooks/useClass\";\nimport Sidebar from \"../SideBar/components/SideBar\";\nimport {Route} from \"react-router-dom\";\nimport CardInfo from \"../../shared/CardInfo/components/CardInfo\";\nimport Main from \"../Main/pages/MainPage/Main\";\nimport AddCity from \"../Main/pages/AddCityPage/AddCity\";\nimport {addCard} from \"../../shared/functions\";\n\n\nconst Client = () => {\n    const [switcher, setSwitcher, theme] = useClass(true, 'dark', 'light')\n    const [burger, setBurger, visible] = useClass(false, 'active')\n    const [show, setShow, resultShow] = useClass(false, 'show', 'hide');\n    const [objCard, setObjCard] = useState({})\n    const [arrCards, setArrCards] = useState([])\n    const [today, setToday] = useState('')\n\n    const hashComponentCardInfo =\n        useMemo(() =>\n            <Route path='/card'><CardInfo theme={theme} today={today}/></Route>, [theme, today])\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem('cards'))\n        setArrCards(data)\n    }, [objCard])\n\n    return (\n        <>\n            <Header\n                switcher={switcher} theme={theme} visible={visible}\n                setSwitcher={setSwitcher} setBurger={setBurger} setToday={setToday}\n            />\n            <Route exact path='/'>\n                <Main\n                    switcher={switcher} arrCards={arrCards}\n                    setObjCard={setObjCard} setShow={setShow}\n                />\n            </Route>\n            {hashComponentCardInfo}\n            <Route path='/add-city'>\n                <AddCity\n                    switcher={theme} objCard={objCard} resultShow={resultShow} show={show}\n                    setObjCard={setObjCard} setShow={setShow}\n                    addCard={() => addCard(objCard, arrCards, setArrCards)}\n                />\n            </Route>\n            <Sidebar burger={burger} theme={theme}/>\n        </>\n    )\n}\n\nexport default Client\n","export const addCard = (objCard, arrCards, setArrCards) => {\n    setArrCards((state) => !!state ? [objCard, ...state] : [objCard])\n    if (localStorage.getItem('cards')) {\n        localStorage.removeItem('cards')\n        localStorage.setItem('cards', JSON.stringify([objCard, ...arrCards]))\n    } else if (!!arrCards) {\n        localStorage.setItem('cards', JSON.stringify([objCard, ...arrCards]))\n    } else {\n        localStorage.setItem('cards', JSON.stringify([objCard]))\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Client from \"./client/Client\";\nimport {BrowserRouter, Switch} from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <BrowserRouter>\n        <div className=\"body\">\n            <Switch>\n                <Client />\n            </Switch>\n        </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}